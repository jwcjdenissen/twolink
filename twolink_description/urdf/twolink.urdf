<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from twolink.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- UNIMATE Puma 560 Manipulator -->
<robot name="twolink" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Some constants -->
  <!-- Some esthetic color definitions -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="red_transparent">
    <color rgba="0.8 0.0 0.0 0.5"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="white_transparent">
    <color rgba="1.0 1.0 1.0 0.5"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="Metal">
    <color rgba="0.827450980392 0.827450980392 0.827450980392 1.0"/>
  </material>
  <material name="wood">
    <color rgba="0.803921568627 0.521568627451 0.247058823529 1.0"/>
  </material>
  <!-- Some xacro macro definitions -->
  <!-- Create inertia matrix from parameters for general parts :
  mass[kg] and center of mass[m] 
  inertia_diagonal defined as {Ixx Iyy Izz}[kg.m^2]
  inertia_off_diagonal defined as {Ixy Ixz Iyz}[kg.m^2]
  -->
  <!-- Create inertia matrix from parameters for homogeneous parts : 
  density[kg/m^3], volume[m^3] and center of mass[m]
  inertia_diagonal defined as {Ixx Iyy Izz}[m^4]
  inertia_off_diagonal defined as {Ixy Ixz Iyz}[m^4]
  -->
  <!-- Import Gazebo components for now colors and control plugin -->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/twolink</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- Link 1 -->
  <gazebo reference="link_1">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <static>false</static>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- Link 2 -->
  <gazebo reference="link_2">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <static>false</static>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- Link definitions -->
  <link name="world">
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </link>
  <link name="link_1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
      <geometry>
        <!-- Beam dimensions (width x width x length) -->
        <box size="0.05 0.05 0.5"/>
      </geometry>
      <material name="red_transparent"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
      <mass value="9.375"/>
      <inertia ixx="0.197265625" ixy="0.0" ixz="0.0" iyy="0.197265625" iyz="0.0" izz="0.00390625"/>
    </inertial>
  </link>
  <link name="link_2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
      <geometry>
        <!-- Beam dimensions (width x width x length) -->
        <box size="0.05 0.05 0.5"/>
      </geometry>
      <material name="red_transparent"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
      <mass value="9.375"/>
      <inertia ixx="0.197265625" ixy="0.0" ixz="0.0" iyy="0.197265625" iyz="0.0" izz="0.00390625"/>
    </inertial>
  </link>
  <!-- Joint definitions -->
  <joint name="joint_1" type="continuous">
    <parent link="world"/>
    <child link="link_1"/>
    <origin rpy="0 0 0" xyz="0 0 1.0"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="50.0"/>
    <dynamics friction="10.0"/>
    <dynamics spring_reference="0.0"/>
    <dynamics spring_stiffness="10.0"/>
  </joint>
  <joint name="joint_2" type="continuous">
    <parent link="link_1"/>
    <child link="link_2"/>
    <origin rpy="0 0 0" xyz="0 0 -0.5"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="50.0" spring_stiffness="200.0"/>
  </joint>
  <transmission name="joint_1_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="joint_1_actuator">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_2_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="joint_2_actuator">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

